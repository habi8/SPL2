<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Community Newsfeed</title>
    <link rel="stylesheet" href="/newsfeed/newsfeed.css">
    
</head>
<body>

    <!-- Left Sidebar - People Section -->
     
    <div class="left-sidebar">
        <div class="head">
            <img src="/newsfeed/conserve-the-deep-logo.png">
        <p><b>Community</b></p>
        </div>
        
        <div class="header">
            <img src="/newsfeed/handshake.png" alt="Handshake">
        <h3>People</h3>
        </div>
        
        <div id="people-list">
            <% users.forEach(user => { %>
                <div class="user-item">
                    <img src="<%= user.profilePic || '/posts/user.png' %>" alt="<%= user.userName %>'s profile" class="user-pic">
                    <div class="user-details">
                        <span class="user-name"><%= user.userName  || "My Profile" %></span>
                        <button class="addFriend">Add friend</button> 
                    </div>
                </div>
                
            <% }); %>
        </div>
    </div>
    

    <!-- Middle Section - Newsfeed -->
    <div class="newsfeed" id="newsfeed">
        <div id = "header">
            <img id="newspaperimg" src="/newsfeed/newspaper.png" onclick="refreshPage()">
        </div>
        <div id="post-container">

        </div>
    </div>

    <!-- Right Sidebar - Profile & Logout -->
    <div class="right-sidebar">
        <div class="profile" id="profile">
            <img src="<%= profilePic%>"alt="Profile picture">
            <span><b><%=userName%></b>
            
            </span>
        </div>
        <div class="icons">
            <div class="notification-wrapper">
                <img id="notifications" src="/newsfeed/bell.png">
                <div class="popup-box" id="popup">
                    <h3>Notifications</h3>
                    <p>No new notifications</p>
                </div>
            </div>
            <div class="messages-wrapper">
                <img id="messages" src="/newsfeed/message.png">
                <div class="popup-boxmsg" id="popupmsg">
                    <h3>Messages</h3>
                    <p>No new Messages</p>
                </div>
            </div>
            
        </div>
        
        <button class="logout" id="logout">Logout</button>
    </div>

    <script>
        function refreshPage() {
    window.scrollTo(0, 0); // Scroll back to top
    location.reload(); // Refresh the page
}

        //fetcing posts
        document.addEventListener("DOMContentLoaded", async function () {
    try {
        const response = await fetch("/getAllPosts");
        const data = await response.json();

        if (data.success) {
            displayPosts(data.Allposts);
        } else {
            console.error("Failed to fetch posts:", data.message);
        }
    } catch (error) {
        console.error("Error fetching posts:", error);
    }
});

function displayPosts(posts) {
    const postContainer = document.getElementById("post-container");
    postContainer.innerHTML = ""; // Clear existing posts before loading new ones

    posts.forEach((post) => {
        const postElement = document.createElement("div");
        postElement.classList.add("post-box");

        postElement.innerHTML = `
            <div class="post-header">
                <img id="profilePic" src="${post.profilePic}" alt="Profile" class="profile-pic">
                <div class="post-info">
                    <h4>${post.userName}</h4>
                    <p class="post-time">${new Date(post.createdAt).toLocaleString()}</p>
                </div>
            </div>
            <p class="post-text">${post.statusText || ""}</p>
            ${post.photo ? `<img  src="${post.photo}" alt="Post Image" class="post-image">` : ""}
           <div class="like">
                            <img src="/posts/like.png" id="likeImage" onclick="toggleLike(this)">    
                        </div>
        `;
        function toggleLike(imgElement) {
    const likeSrc = "/posts/like.png";
    const likedSrc = "/posts/liked.png";
    
    // Check if the current image source is "like.png"
    if (imgElement.src.includes(likeSrc)) {
        imgElement.src = likedSrc;  // Change to liked image
    } else {
        imgElement.src = likeSrc;   // Change back to like image
    }
}

        postContainer.appendChild(postElement);
    });
}



        // Profile Click Event
        document.getElementById("profile").addEventListener("click", async function() {
    try {
        const response = await fetch("/profile"); // Send GET request to backend
        if (response.ok) {
            window.location.href = "/profile"; // Redirect to the profile page
        } else {
            alert("Failed to load profile");
        }
    } catch (error) {
        console.error("Error fetching profile:", error);
        alert("Something went wrong!");
    }
});

        document.getElementById("newsfeed").addEventListener("click",async function(){
            window.location.reload();

        })

        // Logout Button Click Event
        document.getElementById("logout").addEventListener("click",async function() {
            try {
                
        const response = await fetch("/login"); // Send GET request to backend
        if (response.ok) {
            window.location.href = "/login";
            session.destroy(); // Redirect to the profile page
        } else {
            alert("Failed to log out");
        }
    } catch (error) {
        console.error("Error logging out:", error);
        alert("Something went wrong!");
    }
        });
        
    //notificationBox
    const bellIcon = document.getElementById("notifications");
const popup = document.getElementById("popup");

bellIcon.addEventListener("click", () => {
    
    if (popup.style.display === "block") {
        bellIcon.style.transform= "scale(1)"; 
        popup.style.opacity = "0";
        setTimeout(() => {
            popup.style.display = "none";
        }, 300); // Matches the fade-out transition
    } else {
        bellIcon.style.transform= "scale(1.4)"; 
        popup.style.display = "block";
        setTimeout(() => {
            popup.style.opacity = "1";
        }, 10); // Small delay for smooth fade-in effect
    }
});

//messages
const msgIcon = document.getElementById("messages");
const popupmsg = document.getElementById("popupmsg");

msgIcon.addEventListener("click", () => {
    if (popupmsg.style.display === "block") {
        msgIcon.style.transform= "scale(1)"; 
        popupmsg.style.opacity = "0";
        setTimeout(() => {
            popupmsg.style.display = "none";
        }, 300); // Matches the fade-out transition
    } else {
        msgIcon.style.transform= "scale(1.4)"; 
        popupmsg.style.display = "block";
        setTimeout(() => {
            popupmsg.style.opacity = "1";
        }, 10); // Small delay for smooth fade-in effect
    }
});

//add friend
document.querySelectorAll('.addFriend').forEach(button => {
    button.addEventListener('click', async (e) => {
        const toUserName = e.target.closest('.user-item').querySelector('.user-name').textContent;
        const profilePicElement = document.querySelector('#profile img'); // Select the img inside #profile
        const profilePic = profilePicElement.getAttribute('src'); // Get the src attribute
        const userNameElement = document.querySelector('#profile span b'); // Select the username element
        const fromUserName = userNameElement.textContent.trim(); // Get the username text

        console.log(profilePic); // Check profile picture src
        console.log(fromUserName); // Check username
        console.log(toUserName)
        try {
            const response = await fetch('/addFriend', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ fromUserName,profilePic,toUserName })
            });

            const data = await response.json();

            if (data.success) {
                // Successfully sent friend request, update UI
                const buttonElement = e.target;
                // Create a new span element with the text "Friend request sent"
                const statusElement = document.createElement('span');
                statusElement.textContent = 'Friend request sent';
                statusElement.style.color = "green"; // Make it visually distinct
                
                // Replace the button with the text
                buttonElement.replaceWith(statusElement);

                alert('Friend request sent successfully');
                
            } else {
                alert('Failed to send friend request');
            }
        } catch (error) {
            console.error('Error:', error);
            alert('Something went wrong while sending the friend request');
        }
    });
});


    </script>
</body>
</html>
