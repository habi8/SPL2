<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Profile Page</title>
    <style>
        *{
            font-family: system-ui;
        }
        body {
            font-family: Arial, sans-serif;
            height: 100vh;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            background: #CCCCFF;
        }

        .container {
            display: flex;
            width: 80%;
            margin-top: 20px;
            justify-content: space-evenly;
            height: auto;
            
        }

        

        #container {
            background: white;
            padding: 20px;
            border-radius: 10px;
            display: inline-block;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
        button {
            background-color: #007bff;
            color: white;
            border: none;
            padding: 10px 15px;
            margin-top: 10px;
            cursor: pointer;
            border-radius: 5px;
        }
        button:hover {
            background-color: #0056b3;
        }
        input {
            padding: 8px;
            margin-top: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
            display: none;
        }

        #editName {
            display: none;
            padding: 8px;
            margin-top: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
            width: 100%;
        }
        /* Sidebar */
        .sidebar {
            width: 20%;
            padding: 20px;
            background: #fff;
            height: 100vh;
            box-shadow: 2px 0px 10px rgba(0, 0, 0, 0.1);
        }

        .sidebar.left {
            border-right: 2px solid #ccc;
        }

        .sidebar.right {
            border-left: 2px solid #ccc;
        }

        .sidebar h3 {
            margin-bottom: 15px;
        }

        .sidebar ul {
            list-style: none;
            padding: 0;
        }

        .sidebar ul li {
            display: flex;
            align-items: center;
            margin-bottom: 10px;
        }

        .sidebar ul li img {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            margin-right: 10px;
        }

        .sidebar button {
            margin-left: auto;
            background: #007bff;
            color: white;
            border: none;
            padding: 5px 10px;
            border-radius: 5px;
            cursor: pointer;
        }

        .sidebar button:hover {
            background: #0056b3;
        }

        /* Profile Section */
        .profile-header-inner {
        display: flex;
        align-items: center;
        gap: 15px;
        }

/* #backToNewsfeedBtn img{
    border: none;
    height: 20px;
    width: 20px;
    border-radius: 5px;
    cursor: pointer;
    display: flex;
    justify-content: left;
    align-items: flex-start;
    gap: 8px;
} */


        .profile-section {
            margin-top: 10px;
            width: 60%;
            padding: 20px;
            margin: 10px;
            text-align: center;
            background: white;
            box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.1);
            border-radius: 10px;
        }

        .sidebar-left {
            margin-top: 10px;
            width: 20%;
            margin:10px;
            background: white;
            box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.1);
            border-radius: 10px;
            
        }

        
        .sidebar-right {
            margin:10px;
            width: 30%;
            background: white;
            box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.1);
            border-radius: 10px;
        }
        .header{
            display: flex;
            padding: 10px;
        }

        .header img{
            margin: 10px;
            height: 30px;
            width: 30px;
        }

        .header h3{
            margin-top: 15px;
        }
        
        
        .profile-header {
    
                     position: relative; /* To make sure we can position items relative to the header */
            }

#backToNewsfeedBtn {
    position: absolute;
    top: 0;
    left: 0;
    height: 30px;
    width: 30px;
    /* transform: translateY(-80%); Vertically centers the button */
    /* border: none; */
    background: transparent;  /* Make background transparent */
    cursor: pointer;
    padding: 0; 
     /* Remove padding */
    border-radius: 0;  /* Ensure no rounded corners */;
}

#backToNewsfeedBtn i{
    height: 30px;
    width: 30px;
}
#backToNewsfeedBtn img {
    width: 30px; /* Adjust as needed */
    height: 30px; /* Adjust as needed */
}
        

        .profile-header{
            padding: 5px;
            border-bottom: 2px solid black;
            /* box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.5);  */
            
        } 

        .profile-header img {
            width: 100px;
            height: 100px;
            border-radius: 50%;
            display: block;
            margin: 0 auto;
            border: 3px solid #007bff;
        }

        .profile-header button {
            display: block;
            margin: 10px auto;
            background: #007bff;
            color: white;
            border: none;
            padding: 8px 12px;
            border-radius: 5px;
            cursor: pointer;
        }

        .profile-header button:hover {
            background: #0056b3;
        }

        
        .bio-section {
            margin-top: 10px;
        }

        .bio-section textarea {
            width: 100%;
            height: 50px;
            display: none;
        }
        #bioText{
            font-family:'Courier New', Courier, monospace;
        }

        .profile-buttons button {
            margin: 5px;
            background: #007bff;
            color: white;
            border: none;
            padding: 8px 12px;
            border-radius: 5px;
            cursor: pointer;
        }

        .profile-buttons button:hover {
            background: #0056b3;
        }


        /* Upload */
        .upload{
            display: flex;
            justify-content: flex-start;
            padding: 10px;
            margin-top: 10px;
            background:#f5f4f8;
            border: 1px solid white;
            border-radius: 10px ;
        }

         #dp{
            height: 40px;
            width: 40px;
            border-radius: 40px;
            padding-top: 6px;
        }

        #upload{
            height: 40px;
            width: 40px;
            padding-top: 5px;
            margin-left: 200px;
        }

        #upload:hover{
            cursor: pointer;
            transform: scale(1.2);
        }

        #status{
            width: 400px;
            margin-left: 10px;
            margin-right: 2px;
            border-radius: 10px;
        }

        #status:hover{
            cursor: pointer;
            border: 1px solid blue;
        }

        #uploadPic{
            height: 50px;
            width: 50px;
            padding-top: 0px;
            margin-right: 10px;
            border-radius: 10px;
        }

        #uploadPic:hover{
            cursor: pointer;
            transform: scale(1.1);
        }

        /* Posts */
        .posts {
            margin-top: 20px;
        }

        .post {
            padding: 10px;
            margin-top: 10px;
            background: #fff;
        }

        .posts h3{
            text-align: left;
            padding-left: 10px;
            font-size: 25px;
        }

        /* Container for all posts */
.posts {
    padding: 20px;
}

/* Each individual post box */
.postBox {
    border: 1px solid #ddd;
    margin-bottom: 20px;
    padding: 15px;
    background-color: #f9f9f9;
    border-radius: 8px;
    display: flex;
    flex-direction: column;
}

/* Profile Picture styling */
.profilePic img {
    width: 50px;
    height: 50px;
    border-radius: 50%;
    margin-right: 15px;
    object-fit: cover;
}

/* Post content styling */
.postContent {
    display: flex;
    flex-direction: column;
}

/* Username styling */
.postContent h4 {
    margin: 0;
    font-size: 16px;
    font-weight: bold;
}

/* Timestamp styling */
.timestamp {
    font-size: 12px;
    color: gray;
    margin-bottom: 10px;
}

/* Status text styling */
.statusText {
    font-size: 14px;
    margin-bottom: 10px;
}

/* Post image styling */
.postImage {
    width: 100%;
    max-width: 600px;
    height: auto;
    margin-top: 10px;
}

        /* Modal for editing */
        .modal {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            display: none;
            justify-content: center;
            align-items: center;
        }

        .modal-content {
            background: #fff;
            padding: 20px;
            border-radius: 10px;
            width: 300px;
            text-align: center;
        }

        .modal-content input, .modal-content textarea {
            width: 100%;
            margin-bottom: 10px;
        }

        .modal-content button {
            margin: 5px;
            background: #007bff;
            color: white;
            border: none;
            padding: 8px 12px;
            border-radius: 5px;
            cursor: pointer;
        }

        .modal-content button:hover {
            background: #0056b3;
        }

        .modal .cancel-btn {
            background: #ccc;
        }
    </style>
</head>
<body>

    <div class="container">
        <!-- Left Sidebar: People -->
        <div class="sidebar-left">
            <div class="header">
                <img src="/newsfeed/friends.png">
            <h3>Friends</h3>
            </div>
            
            <ul id="userList">
                <li><img src="user1.jpg" alt="User1"><span>John Doe</span> <button>Add Friend</button></li>
                <li><img src="user2.jpg" alt="User2"><span>Jane Smith</span> <button>Add Friend</button></li>
            </ul>
        </div>
        
 
        <!-- Main Profile Section -->
        <main class="profile-section">
            
                <div class="profile-header">
                    <button id="backToNewsfeedBtn" title="Back to Newsfeed">
                        <i class="homebtn"><img src="/newsfeed/home-button.png "></i> 
                       </button>
                       <img id="profilePic" src="<%= profilePic || '/default-profile.png' %>" alt="<=userName>">

                
                <input type="file" id="profilePicInput" style="display:none;">
                <h2 id="username"><%= userName%></h2>
                <input type="text" id="editUsername" placeholder="Enter new username" style="display:none;">
                <p id="name"><%= name %></p> 
                <input type="text" id="editName" placeholder="Enter new name" style="display:none;">
                
                <div class="bio-section">
                    <p id="bioText"><%= bio%></p>
                    <textarea id="bioInput" placeholder="Enter new bio" style="display:none;"></textarea>
                </div>
                <button id="editProfileBtn">Edit Profile</button>
                <button id="saveChangesBtn" style="display:none;">Save Changes</button>
                <button id="cancelChangesBtn" style="display:none;">Cancel</button>
            </div>
    
            <!-- Posts Section -->
             <div class="upload">
                <img id="dp" src="<%= profilePic || '/default-profile.png' %>">
                <textarea id="status" placeholder="What''s on your mind?"></textarea>
                <input type="file" id="picUpload" accept="image/*" style="display: none;">
                <img id="uploadPic" src="/posts/photos.png">
                <img id="upload" src="/posts/upload.png">
             </div>


            <div class="posts">
                <h3>Posts</h3>
                <div id="postContainer"></div> <!-- This will contain all the posts -->
            </div>
            
        </main>
    
        <!-- Right Sidebar: Inbox -->
        <div class="sidebar-right">
            <div class="header">
            <img src="/newsfeed/message.png">
            <h3>Inbox</h3>
            </div>
            <ul id="messagesList">
                <li><strong>John:</strong> Hey there!</li>
                <li><strong>Jane:</strong> How are you?</li>
            </ul>
        </div>
    </div>
    
    <script>
        //back button
        document.getElementById('backToNewsfeedBtn').addEventListener('click', async function() {
    try {
        const response = await fetch('/newsfeedPage'); // This fetches the profile info
        if (response.ok) {
            // You can still handle data here, if necessary, but redirect to newsfeed page
            window.location.href = "/newsfeed"; // Redirect to the newsfeed page
            console.log("Going back to newsfeed from profile");
        } else {
            alert("Failed to load newsfeed");
        }
    } catch (error) {
        console.error("Error fetching newsfeed:", error);
        alert("Something went wrong!");
    }
});

        // Edit Profile function
        document.getElementById('editProfileBtn').addEventListener('click', () => {
            const isEditing = document.getElementById('editUsername').style.display === 'block';
    
            // Toggle visibility of editable fields
            document.getElementById('editUsername').style.display = isEditing ? 'none' : 'block';
            document.getElementById('editUsername').value = document.getElementById('username').textContent;
    
            document.getElementById('editName').style.display = isEditing ? 'none' : 'block';
            document.getElementById('editName').value = document.getElementById('name').textContent;
    
            document.getElementById('bioInput').style.display = isEditing ? 'none' : 'block';
            document.getElementById('bioInput').value = document.getElementById('bioText').textContent;
    
            document.getElementById('profilePicInput').style.display = isEditing ? 'none' : 'block';
    
            document.getElementById('editProfileBtn').style.display = isEditing ? 'block' : 'none';
            document.getElementById('saveChangesBtn').style.display = isEditing ? 'none' : 'inline-block';
            document.getElementById('cancelChangesBtn').style.display = isEditing ? 'none' : 'inline-block';
        });
    
        // Save changes
    // Save changes
    document.getElementById('saveChangesBtn').addEventListener('click', async () => {
    const updatedUsername = document.getElementById('editUsername').value;
    const updatedName = document.getElementById('editName').value;
    const updatedBio = document.getElementById('bioInput').value;
    const profilePicInput = document.getElementById("profilePicInput");

    let profilePicUrl = document.getElementById("profilePic").src; // Default: keep old pic
    console.log("profilePicUrl: ",profilePicUrl)

    // Check if a new profile picture is selected
    if (profilePicInput.files.length > 0) {
        const formData = new FormData();
        formData.append("profilePic", profilePicInput.files[0]);

        try {
            const uploadResponse = await fetch('/updateProfilePic', { // Change endpoint
                method: 'POST',
                body: formData
            });

            const uploadData = await uploadResponse.json();
            if (uploadResponse.ok) {
                profilePicUrl = uploadData.url; 
                console.log("profile picture uploaded")// Get Cloudinary URL
            } else {
                alert("Failed to upload profile picture: " + uploadData.error);
                return;
            }
        } catch (error) {
            console.error("Error uploading profile picture:", error);
            alert("An error occurred while uploading the profile picture.");
            return;
        }
    }

    try {
        // Send updated profile info (including profilePicUrl) to backend
        const response = await fetch('/updateProfile', { // This should be for profile updates only
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                username: updatedUsername,
                name: updatedName,
                bio: updatedBio,
                profilePic: profilePicUrl
            })
        });

        const data = await response.json();
        if (response.ok) {
            document.getElementById('username').textContent = updatedUsername;
            document.getElementById('name').textContent = updatedName;
            document.getElementById('bioText').textContent = updatedBio;
            document.getElementById("profilePic").src = profilePicUrl; // Update UI

            // Hide editable fields after saving
            document.getElementById('editUsername').style.display = 'none';
            document.getElementById('editName').style.display = 'none';
            document.getElementById('bioInput').style.display = 'none';
            document.getElementById('profilePicInput').style.display = 'none';

            document.getElementById('editProfileBtn').style.display = 'block';
            document.getElementById('saveChangesBtn').style.display = 'none';
            document.getElementById('cancelChangesBtn').style.display = 'none';

            alert("Profile updated successfully!");
        } else {
            alert("Failed to update profile: " + data.error);
        }
    } catch (error) {
        console.error("Error updating profile:", error);
        alert("An error occurred while updating the profile.");
    }
});

// Cancel changes
document.getElementById('cancelChangesBtn').addEventListener('click', () => {
    // Revert the editable fields to their original content
    document.getElementById('editUsername').value = document.getElementById('username').textContent;
    document.getElementById('editName').value = document.getElementById('name').textContent;
    document.getElementById('bioInput').value = document.getElementById('bioText').textContent;

    // Hide editable fields
    document.getElementById('editUsername').style.display = 'none';
    document.getElementById('editName').style.display = 'none';
    document.getElementById('bioInput').style.display = 'none';
    document.getElementById('profilePicInput').style.display = 'none';

    document.getElementById('editProfileBtn').style.display = 'block';
    document.getElementById('saveChangesBtn').style.display = 'none';
    document.getElementById('cancelChangesBtn').style.display = 'none';
});

// Profile Picture Upload Preview
document.getElementById("profilePicInput").addEventListener("change", function(event) {
    const reader = new FileReader();
    reader.onload = function() {
        document.getElementById("profilePic").src = reader.result;
    };
    reader.readAsDataURL(event.target.files[0]);
    
});

//status/picture upload
document.getElementById("uploadPic").addEventListener("click", function() {
        document.getElementById("picUpload").click(); // Trigger file input on click
    });

    document.getElementById("picUpload").addEventListener("change", function(event) {
        const file = event.target.files[0]; // Get selected file
        if (file) {
            const reader = new FileReader();
            reader.onload = function(e) {
              const photo=  document.getElementById("uploadPic").src = e.target.result; // Change uploadPic image to selected file
              
            };
            reader.readAsDataURL(file); // Read file as Data URL
        }
    });

    document.getElementById("upload").addEventListener("click", async function () {
    const statusText = document.getElementById("status").value;
    const fileInput = document.getElementById("picUpload");
    const file = fileInput.files[0];


    const userName = "<%= userName%>"; // You should get this from your authentication system
    const profilePic = "<%= profilePic || '/default-profile.png' %>"; 
    //const email = req.session.email;
    //console.log("SEssion mail in profile.js: ",email)
    if (!statusText && !file) {
        alert("Please enter some text or upload an image.");
        return;
    }

    const formData = new FormData();
    formData.append("userName", userName);
    formData.append("profilePic", profilePic);
    formData.append("statusText", statusText);
    //formData.append("email",email);
    if (file) {
        formData.append("photo", file);
        console.log("form data sent")
    }

    try {
        const response = await fetch("/uploadPost", {
            method: "POST",
            body: formData,
        });

        const result = await response.json();
        if (result.success) {
            alert("Post uploaded successfully!");
            document.getElementById("status").value = "";
            fileInput.value = ""; // Reset file input
            document.getElementById("uploadPic").src="/posts/photos.png";
        } else {
            alert("Error uploading post.");
        }
    } catch (error) {
        console.error("Error:", error);
        alert("Something went wrong.");
    }
});

// Fetch all posts from the backend and display them
async function fetchPosts() {
    try {
        const response = await fetch('/getAllPosts');
        const data = await response.json();

        if (data.success) {
            const posts = data.Allposts;
            const postContainer = document.getElementById('postContainer');
            postContainer.innerHTML = ''; // Clear any existing content

            posts.forEach(post => {
                const postElement = document.createElement('div');
                postElement.classList.add('post'); // Add a class for styling

                // Create a box for each post
                postElement.innerHTML = `
                    <div class="postBox">
                        <div class="profileInfo">
                            <img src="${post.profilePic}" alt="Profile Picture">
                            <div class="name&date">
                                 <h4>${post.userName}</h4>
                                 <p class="timestamp">${new Date(post.createdAt).toLocaleString()}</p>
                             </div>   
                            
                        </div>
                        <div class="postContent">
                          
                            <p class="statusText">${post.statusText}</p>
                            ${post.photo ? `<img src="${post.photo}" class="postImage">` : ''}
                        </div>
                    </div>
                `;
                postContainer.appendChild(postElement);
            });
        }
    } catch (error) {
        console.error('Error fetching posts:', error);
    }
}

// Call the function to fetch posts when the page loads
window.onload = fetchPosts;



    </script>
    
    </body>
</html>
